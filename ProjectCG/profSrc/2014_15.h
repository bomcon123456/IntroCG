#pragma once
#include <gl/glut.h>
#include <gl/gl.h>
int _x = 320, _y = 240;
GLubyte myPattern[] = {
	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void myInit(void) {
	glClearColor(1.0f, 1.0f, 1.0f, 0.0f); // tô nen màu xám
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 640.0, 0.0, 480.0);
}
void myDisplay(void) {
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0f, 0.0f, 0.0f); 
	glEnable(GL_POLYGON_STIPPLE);
	glPolygonStipple(myPattern);
	glRectf(_x - 100, _y - 100, _x + 100, _y + 100);	
	glFlush();
}

void keyEvent(unsigned char key, int x, int y){
	switch (key)
	{
	case 'p':{
		glClear(GL_COLOR_BUFFER_BIT);
		glTranslatef(_x, _y, 0.0);
		glRotatef(-20, 0, 0, 1);
		glTranslatef(-_x, -_y, 0.0);
		glRectf(_x - 100, _y - 100, _x + 100, _y + 100);
		break;
	}
	case 27:
		exit(1);
	default:
		break;
	}
}

void run(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(640, 480);
	glutInitWindowPosition(100, 150);
	glutCreateWindow("Test 3");
	glutDisplayFunc(myDisplay);
	glutKeyboardFunc(keyEvent);
	myInit();
	glutMainLoop();
}